---
- name: Copy kubeadm.yaml file
  ansible.builtin.template:
    src: "./templates/kubeadm.yaml"
    dest: "/etc/kubernetes"


# - name: Copy 10-kubeadm.conf file
#   ansible.builtin.template:
#     src: "./templates/10-kubeadm.conf"
#     dest: "/etc/systemd/system/kubelet.service.d"


# - name: initialize the cluster
#   command: kubeadm init --config /etc/kubernetes/aws.yaml --upload-certs > cluster_initialized.txt
#   args:
#     chdir: $HOME
#     creates: cluster_initialized.txt

- name: initialize the cluster
  shell: kubeadm init --config /etc/kubernetes/kubeadm.yaml --upload-certs
  run_once: true
  register: kubeadm_init
  ignore_errors: true

- name: Print join commands
  ansible.builtin.debug:
    var: kubeadm_init.stdout 

- pause:
    minutes: 2

- name: Store init output
  action: copy content="{{ kubeadm_init.stdout }}" dest="/etc/kubernetes/kubeadm-init.stdout"
  run_once: true
  ignore_errors: true

- name: create .kube directory
  become: true
  ansible.builtin.file:
    path: $HOME/.kube
    state: directory
    mode: 0755
  run_once: true

- name: copy admin.conf to user's kube config
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: $HOME/.kube/config
    remote_src: yes
    owner: ubuntu
  run_once: true

# - name: install Pod network
#   become: true
#   command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/a70459be0084506e4ec919aa1c114638878db11b/Documentation/kube-flannel.yml > pod_network_setup.txt
#   args:
#     chdir: $HOME
#     creates: pod_network_setup.txt

